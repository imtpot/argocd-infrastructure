name: argocd
namespace: argocd
source:
  repoURL: https://argoproj.github.io/argo-helm
  targetRevision: 7.3.8
  chart: argo-cd

values:
  # Add lovely-vault-plugin to the repo-server pod
  repoServer:
    initContainers:
      - name: download-tools
        image: registry.access.redhat.com/ubi8
        env:
          - name: AVP_VERSION
            value: 1.18.0
        command: [sh, -c]
        args:
          - >-
            curl -L https://github.com/argoproj-labs/argocd-vault-plugin/releases/download/v$(AVP_VERSION)/argocd-vault-plugin_$(AVP_VERSION)_linux_amd64 -o argocd-vault-plugin &&
            chmod +x argocd-vault-plugin &&
            mv argocd-vault-plugin /custom-tools/
        volumeMounts:
          - mountPath: /custom-tools
            name: custom-tools
    extraContainers:
      - name: avp-helm
        command: [/var/run/argocd/argocd-cmp-server]
        image: quay.io/argoproj/argocd:v2.7.9
        securityContext:
          runAsNonRoot: true
          runAsUser: 999
        volumeMounts:
          - mountPath: /var/run/argocd
            name: var-files
          - mountPath: /home/argocd/cmp-server/plugins
            name: plugins
          - mountPath: /tmp
            name: tmp

          # Register plugins into sidecar
          - mountPath: /home/argocd/cmp-server/config/plugin.yaml
            subPath: avp-helm.yaml
            name: cmp-plugin

          # Important: Mount tools into $PATH
          - name: custom-tools
            subPath: argocd-vault-plugin
            mountPath: /usr/local/bin/argocd-vault-plugin

      # argocd-vault-plugin with Kustomize
      - name: avp-kustomize
        command: [/var/run/argocd/argocd-cmp-server]
        image: quay.io/argoproj/argocd:v2.7.9
        securityContext:
          runAsNonRoot: true
          runAsUser: 999
        volumeMounts:
          - mountPath: /var/run/argocd
            name: var-files
          - mountPath: /home/argocd/cmp-server/plugins
            name: plugins
          - mountPath: /tmp
            name: tmp

          # Register plugins into sidecar
          - mountPath: /home/argocd/cmp-server/config/plugin.yaml
            subPath: avp-kustomize.yaml
            name: cmp-plugin

          # Important: Mount tools into $PATH
          - name: custom-tools
            subPath: argocd-vault-plugin
            mountPath: /usr/local/bin/argocd-vault-plugin

      # argocd-vault-plugin with plain YAML
      - name: avp
        command: [/var/run/argocd/argocd-cmp-server]
        image: quay.io/argoproj/argocd:v2.7.9
        securityContext:
          runAsNonRoot: true
          runAsUser: 999
        volumeMounts:
          - mountPath: /var/run/argocd
            name: var-files
          - mountPath: /home/argocd/cmp-server/plugins
            name: plugins
          - mountPath: /tmp
            name: tmp

          # Register plugins into sidecar
          - mountPath: /home/argocd/cmp-server/config/plugin.yaml
            subPath: avp.yaml
            name: cmp-plugin

          # Important: Mount tools into $PATH
          - name: custom-tools
            subPath: argocd-vault-plugin
            mountPath: /usr/local/bin/argocd-vault-plugin

    volumes:
      - configMap:
          name: cmp-plugin
        name: cmp-plugin
      - name: custom-tools
        emptyDir: {}
    envFrom:
      - secretRef:
          name: vault-env
  extraObjects:
    - kind: Secret
      apiVersion: v1
      metadata:
        name: vault-env
      type: Opaque
      stringData:
        AVP_TYPE: vault
        AVP_AUTH_TYPE: k8s
        AVP_K8S_ROLE: argocd-repo-server
        VAULT_ADDR: http://vault.vault:8200
  configs:
    cm:
      exec.enabled: true
      timeout.reconciliation: 30s
    cmp:
      create: true
      plugins:
        - name: avp-kustomize
          spec:
            allowConcurrency: true

            # Note: this command is run _before_ anything is done, therefore the logic is to check
            # if this looks like a Kustomize bundle
            discover:
              find:
                command:
                  - find
                  - "."
                  - -name
                  - kustomization.yaml
            generate:
              command:
                - sh
                - "-c"
                - "kustomize build . | argocd-vault-plugin generate -"
            lockRepo: false
        - name: avp-helm
          spec:
            allowConcurrency: true

            # Note: this command is run _before_ any Helm templating is done, therefore the logic is to check
            # if this looks like a Helm chart
            discover:
              find:
                command:
                  - sh
                  - "-c"
                  - "find . -name 'Chart.yaml' && find . -name 'values.yaml'"
            generate:
              # **IMPORTANT**: passing `${ARGOCD_ENV_HELM_ARGS}` effectively allows users to run arbitrary code in the Argo CD
              # repo-server (or, if using a sidecar, in the plugin sidecar). Only use this when the users are completely trusted. If
              # possible, determine which Helm arguments are needed by your users and explicitly pass only those arguments.
              command:
                - sh
                - "-c"
                - |
                  helm template $ARGOCD_APP_NAME -n $ARGOCD_APP_NAMESPACE ${ARGOCD_ENV_HELM_ARGS} . |
                  argocd-vault-plugin generate -
            lockRepo: false
        - name: avp
          spec:
            allowConcurrency: true
            discover:
              find:
                command:
                  - sh
                  - "-c"
                  - "find . -name '*.yaml' | xargs -I {} grep \"<path\\|avp\\.kubernetes\\.io\" {} | grep ."
            generate:
              command:
                - argocd-vault-plugin
                - generate
                - "."
            lockRepo: false
